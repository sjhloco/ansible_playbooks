Using the Azure Resource Manager modules requires authenticating with the Azure API. You can choose from two authentication strategies:
-Active Directory Username/Password
-Service Principal Credentials

When you have code that needs to access or modify resources, you can create an identity for the app. This identity is known as a service principal. 

===== This example is using Service Principal Credentials ======

1. From terminal create the account (or in portal from Cloud Shell >> Bash). Can use. --password to set password but will be depreciated soon.
az ad sp create-for-rbac --name ServicePrincipalName --password PASSWORD

It will give you a JSON output that is used in next tasks next tasks

macoloco:~$az ad sp create-for-rbac --name Ansible
Retrying role assignment creation: 1/36
Retrying role assignment creation: 2/36
Retrying role assignment creation: 3/36
Retrying role assignment creation: 4/36
Retrying role assignment creation: 5/36
{
  "appId": "7eaefe3b-2f82-48ca-8b52-10268d132ade",
  "displayName": "Ansible",
  "name": "http://Ansible",
  "password": "464f8c60-4a7c-4171-b6ad-d33017d7a82a",
  "tenant": "0be44667-6d49-4497-ad9a-abe17032576a"
}


az ad sp list --display-name Ansible			To check it, although can never find the password again.
az ad sp credential reset --name APP_ID			to reste credentials if forget them


The default role for a service principal is Contributor. This role has full permissions to read and write to an Azure account. 
The Reader role is more restrictive, with read-only access. 
az role assignment create --assignee APP_ID --role Reader
az role assignment delete --assignee APP_ID --role Contributor

az role assignment list 		check


az login --service-principal --username APP_ID --password PASSWORD --tenant TENANT_ID			To test

macoloco:~$az login --service-principal --username 7eaefe3b-2f82-48ca-8b52-10268d132ade --password 464f8c60-4a7c-4171-b6ad-d33017d7a82a --tenant 0be44667-6d49-4497-ad9a-abe17032576a
[
  {
    "cloudName": "AzureCloud",
    "id": "c6d44013-ccce-4f0a-8943-450a66664560",
    "isDefault": true,
    "name": "Visual Studio Enterprise",
    "state": "Enabled",
    "tenantId": "0be44667-6d49-4497-ad9a-abe17032576a",
    "user": {
      "name": "7eaefe3b-2f82-48ca-8b52-10268d132ade",
      "type": "servicePrincipal"
    }
  }
]




2. Get Azure SubscriptionID 
az account show

macoloco:~$az account show
{
  "environmentName": "AzureCloud",
  "id": "c6d44013-ccce-4f0a-8943-450a66664560",				<<<<<<
  "isDefault": true,
  "name": "Visual Studio Enterprise",
  "state": "Enabled",
  "tenantId": "0be44667-6d49-4497-ad9a-abe17032576a",
  "user": {
    "name": "mucholoco@hotmail.co.uk",
    "type": "user"
  }
}

3. In Ansible create a directory named .azure in the home directory and a credentials file under it. 
mkdir ~/.azure
vi ~/.azure/credentials

Insert the following lines into the file using details got from Azure

[default]
subscription_id=14c5f296-9919-4832-acc4-4d0a96de80c1
client_id=7eaefe3b-2f82-48ca-8b52-10268d132ade
secret=464f8c60-4a7c-4171-b6ad-d33017d7a82a
tenant=0be44667-6d49-4497-ad9a-abe17032576a


or Use Ansible environment variables:
export AZURE_SUBSCRIPTION_ID=<your-subscription_id>
export AZURE_CLIENT_ID=<security-principal-appid>
export AZURE_SECRET=<security-principal-password>
export AZURE_TENANT=<security-principal-tenant>

3. Install the required packages Ansible:
pip install ansible[azure]

4. Enter the following command to remove conflicting Python cryptography package
sudo pip uninstall -y cryptography


https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?view=azure-cli-latest
https://www.azuredevopslabs.com/labs/vstsextend/ansible/
https://docs.ansible.com/ansible/latest/scenario_guides/guide_azure.html#providing-credentials-to-azure-modules


