---
ansible_python_interpreter: "/usr/bin/env python"          # Ubuntu


################################## ASA only Variables ##################################
# device credentials
ansible_user: ste
ansible_ssh_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33643534626634643263303934626161393832376262356262373335383635333934316333613166
          6263643766643030353764356261643866333138363962300a343364376261366630623838643561
          38396563616437653136323430613761616536646131663364646631353539636539656331326264
          6362656262643964610a653830346165633264366465306562663733633539666465343337663662
          6663

# ASA specific VPN configuration details
vpn_index: 100
crypto_map: CRYPTO_MAP
vpn_interface: HME_INET_VL99
outside_acl: OUTSIDE
# Naming for the VPN ACL and objects groups
asa_vpn:
  acl: "{{ cld_provider }}_VPN"
  local_grp: "{{ cld_provider }}_LOCAL"
  az_vnet_grp: "{{ cld_provider }}_REMOTE_VNET"
  az_subnet_grp: "{{ cld_provider }}_REMOTE_SUBNET"


################################## Azure only Variables ##################################
# Azure base Parameters
cld_region: westeurope
rg_name: stesworld

# Azure VPN gateway subnet and object naming
public_ip_name: NT_VPN_{{ rmte_location }}_{{ cld_provider }}IP
vn_name: NT-vnet1
gw_subnet_name: GatewaySubnet
gw_subnet_prfx: 10.20.255.0/28

# Azure object naming for elements that glue VPN connection together (local and remote details joined in a connection profile)
cld_gateway: NT_VPN_{{ rmte_location }}_{{ cld_provider }}GW
rmte_gateway: NT_VPN_{{ rmte_location }}_REMOTE
vpn_connection: NT_VPN_{{ rmte_location }}_CONN

################################## VPN Variables for both ASA and Azure ##################################

# Define whether it is policy_based (IKEV1) or or route_based (IKEV2) IpSec VPN
tunnel_type: policy_based
# tunnel_type: route_based

#Names of the VPN sites, so the cloud provider (i.e Azure) and the remote location (i.e home))
cld_provider: AZ
rmte_location: HME

# Remote-side VPN variables - Peer IP address and Interesting traffic
#rmte_public_ip: 146.198.60.199           # Unhash to statically define. By default if Ansible behind ASA is automatically got
rmte_subnets:
  - 10.10.10.0/24
  - 10.10.20.0/24

# Cloud-side VPN variables - Peer IP Azure object name, interesting traffic and subnets (for filtering in outside ACL)
# cld_public_ip: 20.71.131.210         # Unhash if Azure is deleted yet ASA is not, allows you to run ASA parts
vn_addr_spc:
  - 10.20.0.0/16
cld_subnets:
  NT-vnet1-mgmt: 10.20.10.0/24
  NT-vnet1-data: 10.20.20.0/24

# VPN PSK, encryption (AES) and hashing (SHA) algorithms - Same names used for IKEv1 or IKEV2 in the playbooks
# policy-based SKU basic is limited to pre-config defaults https://docs.microsoft.com/en-gb/azure/vpn-gateway/vpn-gateway-about-vpn-devices

## EXAMPLE of IKEV1 (policy-based) parameters - no need to define the PFS
p1_encr: aes-256            # 3des, aes-256
p1_hash: sha1               # sha1
dh: 2                       # 2
p1_life: 28800              # Azure default

p2_encr: aes-256            # 3des, aes-256
p2_hash: sha1               # sha1
sa_life: 3600               # Azure default
sa_size: 102400000          # Azure default

# Route-based SKU VpnGw1 can use IPsec policy to change IKEV2 settings - https://docs.microsoft.com/en-gb/azure/vpn-gateway/vpn-gateway-about-compliance-crypto?WT.mc_id=Portal-fx
## EXAMPLE of IKEV2 (route-based) parameters
# p1_encr: aes-256            # des, 3des, aes-192, aes-256
# p1_hash: sha384             # md5, sha1, sha256, sha384
# dh: 24                      # 2, 14, 24
# p1_life: 28800              # Is fixed to this in Azure

# p2_encr: aes-256            # des, 3des, aes-192, aes-256
# p2_hash: sha-1              # md5, sha-1, sha-256
# pfs: group24                # group2, group24
# sa_life: 27000              # Azure defaults
# sa_size: 102400000          # Azure defaults

psk: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37353039666337373863636331626435353965343539643735333361316266656539323433653866
          3263386464326137366534633334656561643861613532330a613338323731393535313962613861
          37613930613337343237653063303062353530323234646634343438376165623835646366323361
          3836653430386462630a333265353539663733626261613462353363323137366464333535363465
          63623961376364333436313037633033663531306230323563633038613833633435

# Required to stop playbook failing if it doesn't exist. Will be overridden by psk if actually exists
psk1: dummy