---
# This playbook creates VLANs on IOS devices

- name: "Create VLANs"
  hosts: dc1-vios-sw1
  connection: local
# Create the file structure, all run in check mode and dont report changes to Ansible.
  pre_tasks: 
  - name: "SYS >> Create the file structure"
    block:
    - set_fact: host_tmpdir="{{ config_dir }}/{{ inventory_hostname }}"
      changed_when: false 
    - file: path="{{ host_tmpdir }}" state=absent
      changed_when: false  
    - file: path="{{ host_tmpdir }}" state=directory
      changed_when: false
    - name: "NET >> Get the pre-check VLAN info"
      napalm_cli:
        provider: "{{ creds_all }}"
        dev_os: "{{ os }}"
        args:
          commands:
            - show vlan
      register: output
      changed_when: false 
# Gets current device VLANs. ntc-template is in playbook template folder and is used to create structured data which is passed through custom filters (python)
    - name: "SYS >> Display Current VLAN Info"
      set_fact:     
        before_num_vlans: "{{ output.cli_results['show vlan'] | parse_cli_textfsm('templates/cisco_ios_show_vlan.template') | num_vlans }}"
        before_dev_vlans: "{{ output.cli_results['show vlan'] | parse_cli_textfsm('templates/cisco_ios_show_vlan.template') | dev_vlans }}"
      changed_when: false         
    - debug: 
        msg: "Are {{ before_num_vlans }} VLANs in total which are {{ before_dev_vlans }}"
      changed_when: false 
    check_mode: no

# Build and apply the configuration for the new VLANs
  tasks:
  - name: "SYS >> Create the configuration"
    template:
      src: create_vlan.j2
      dest: "{{ host_tmpdir }}/vlan.cfg"
    check_mode: no  
  - name: "NET >> Apply the configuration"
    napalm_install_config:
      provider: "{{ creds_all }}"
      dev_os: "{{ os }}"
      config_file: "{{ host_tmpdir }}/vlan.cfg"
      commit_changes: true
      replace_config: false
      get_diffs: true
      diff_file: "{{ host_tmpdir }}/diff"     # stores a copy of the differences
    register: changes
  - debug: var=changes.msg.splitlines() 
    changed_when: false
    check_mode: no
    when: changes.msg != ""          # Only printed if change is made
  - debug: msg="No changes to make"
    changed_when: false
    check_mode: no  
    when: changes.msg == ""          # Only printed if change is not made

# Only run if a change is made. Validates that the number of VLANs on the device matches what is expected after new ones have been added
  post_tasks:
  - name: "NET >> Get the post-check VLAN info"
    block:
    - napalm_cli:
        provider: "{{ creds_all }}"
        dev_os: "{{ os }}"
        args:
          commands:
            - show vlan
      register: output
      changed_when: false      
    - set_fact:
        after_num_vlans: "{{ output.cli_results['show vlan'] | parse_cli_textfsm('templates/cisco_ios_show_vlan.template') | num_vlans }}"
        after_dev_vlans: "{{ output.cli_results['show vlan'] | parse_cli_textfsm('templates/cisco_ios_show_vlan.template') | dev_vlans }}"
      changed_when: false
    - debug: var=after_dev_vlans 
      changed_when: false    
    # Assert that the new number of vlans is old number + number from variables that where added
    - assert:
        that:       # Need to convert to integrars to compare the values
          - ({{ before_num_vlans | int }} + {{ vlans | length }}) == {{ after_num_vlans | int }}
        msg: "Number of VLANs doesnt match what is expected"
      changed_when: false        
    when: changes.msg != ""
    # Could add another assert statement to make sure the VLAN names mathh what they are meant to be